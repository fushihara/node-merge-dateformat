{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AACzC,sBAAsB,IAAY;IAChC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC;AACD,+BAA+B,SAAiB,EAAE,WAAmB,2BAA2B,EAAE,QAAqB,IAAI;IACzH,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG;YACzB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YAC/C,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU;SAC7E,CAAC;KACH;SAAM;QACL,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG;YACzB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACjC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;SAChD,CAAC;KACH;IACD,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC7C,OAAO,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,CAAC;AACQ,sDAAqB;AAD7B,CAAC","sourcesContent":["import * as dateformat from \"dateformat\";\r\nfunction テキストを1行づつに分割(テキスト: string): string[] {\r\n  return テキスト.split(\"\\n\");\r\n}\r\nfunction mergeHeaderDateformat(マージ対象テキスト: string, 日付フォーマット: string = \"yyyy/mm/dd(ddd)HH:MM:ss.l\", 曜日の言語: \"ja\" | \"en\" = \"en\") {\r\n  if (曜日の言語 == \"en\") {\r\n    dateformat.i18n.dayNames = [\r\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\r\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n    ];\r\n  } else {\r\n    dateformat.i18n.dayNames = [\r\n      '日', '月', '火', '水', '木', '金', '土',\r\n      '日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'\r\n    ];\r\n  }\r\n  const 接頭語 = dateformat(new Date(), 日付フォーマット);\r\n  return テキストを1行づつに分割(マージ対象テキスト).map(a => `${接頭語} ${a}`).join(\"\\n\");\r\n};\r\nexport { mergeHeaderDateformat };\r\n"]}